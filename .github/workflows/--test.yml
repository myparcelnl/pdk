name: 'ðŸ”¸ Run tests'

on:
  workflow_call:

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: 'Handle coverage cache'
        uses: actions/cache@v3
        id: cache-coverage
        with:
          path: ./clover.xml
          key: ${{ runner.os }}-coverage-${{ hashFiles('**/composer.lock', './src/**', './tests/**') }}

      - name: 'Handle composer cache'
        uses: actions/cache@v3
        if: steps.cache-coverage.outputs.cache-hit != 'true'
        id: cache-composer
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - uses: myparcelnl/actions/pull-docker-image@v3
        if: steps.cache-coverage.outputs.cache-hit != 'true'
        id: docker
        with:
          image: ghcr.io/myparcelnl/php-xd:7.4

      - name: 'Install composer dependencies'
        if: steps.cache-coverage.outputs.cache-hit != 'true'
        shell: bash
        run: |
          docker run \
            --volume $PWD:/app \
            --volume $HOME/.composer:/root/.composer \
            --env COMPOSER_CACHE_DIR=/root/.composer \
            ${{ steps.docker.outputs.image }} \
            composer install --no-progress --no-scripts --no-plugins

      - name: 'Run tests'
        if: steps.cache-coverage.outputs.cache-hit != 'true'
        shell: bash
        run: |
          docker run \
            --volume $PWD:/app \
            ${{ steps.docker.outputs.image }} \
            vendor/bin/pest --coverage-clover=clover.xml

      - name: 'Upload coverage artifact'
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./clover.xml
