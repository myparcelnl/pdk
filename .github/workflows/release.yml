name: 'Publish new version ðŸš€'

on:
  push:
    branches:
      - main

  workflow_dispatch:

  schedule:
    # every day at 16:00
    - cron: '0 16 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-22.04
    outputs:
      new-commits: ${{ steps.check-release.outputs.new-commits }}
    steps:
      - uses: actions/checkout@v3

      - name: 'Check if there are commits since the last release'
        id: check-release
        #language=sh
        run: |
          if [[ -z "$(git log $(git describe --tags --abbrev=0)..HEAD)" ]]; then
              echo "new-commits=false" >> $GITHUB_OUTPUT
          else
              echo "new-commits=true" >> $GITHUB_OUTPUT
          fi

  test:
    if: (always() && github.event_name != 'schedule') || needs.prepare.outputs.new-commits == 'true'
    needs: prepare
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test

  quality:
    if: (always() && github.event_name != 'schedule') || needs.prepare.outputs.new-commits == 'true'
    needs: prepare
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/rector
        with:
          dry-run: true
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}

  release:
    runs-on: ubuntu-22.04
    if: github.event_name != 'push'
    needs:
      - test
      - quality
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
          token: ${{ secrets.GH_REPO_TOKEN }}

      # TODO: Switch to v3 with app credentials when GitHub apps are allowed to bypass the merge queue. https://github.com/orgs/community/discussions/52652#discussioncomment-5647196
      - uses: myparcelnl/actions/setup-git-credentials@v2
        with:
          token: ${{ secrets.GH_REPO_TOKEN }}

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_REPO_TOKEN }}

      - uses: myparcelnl/actions/yarn-install@v3

      - uses: myparcelnl/actions/semantic-release@v3
        with:
          token: ${{ secrets.GH_REPO_TOKEN }}
          write-summary: true

  rebase-prs:
    needs: release
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - uses: myparcelnl/actions/setup-git-credentials@v3
        id: credentials
        with:
          app-id: ${{ secrets.MYPARCEL_APP_ID }}
          private-key: ${{ secrets.MYPARCEL_APP_PRIVATE_KEY }}

      - uses: peter-evans/rebase@v2
        with:
          token: ${{ steps.credentials.outputs.token }}
          base: ${{ github.ref_name }}
          exclude-drafts: true
          exclude-labels: 'dependencies'
