name: 'ðŸ”¸ Run tests ðŸ§ª'

on:
  workflow_dispatch:

  workflow_call:
    inputs:
      ref:
        type: string
        required: false

jobs:
  test:
    name: 'Run pest tests'
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        id: cache-coverage
        with:
          path: ./clover.xml
          key: ${{ runner.os }}-coverage-${{ hashFiles('**/composer.lock', './src/**', './tests/**') }}-invalidate

      - uses: myparcelnl/actions/pull-docker-image@v3
        if: steps.cache-coverage.outputs.cache-hit != 'true'
        id: docker
        with:
          image: ghcr.io/myparcelnl/php-xd:7.4

      - uses: actions/cache@v3
        if: steps.cache-coverage.outputs.cache-hit != 'true'
        id: cache-composer
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: 'Install composer dependencies'
        if: steps.cache-coverage.outputs.cache-hit != 'true'
        run: |
          docker run \
            --volume $PWD:/app \
            --volume $HOME/.composer:/root/.composer \
            --env COMPOSER_CACHE_DIR=/root/.composer \
            ${{ steps.docker.outputs.image }} \
            composer install --no-progress --no-scripts --no-plugins

      - name: 'Run tests'
        if: steps.cache-coverage.outputs.cache-hit != 'true'
        run: |
          docker run \
            --volume $PWD:/app \
            ${{ steps.docker.outputs.image }} \
            vendor/bin/pest

      - name: 'Get coverage file from container'
        if: steps.cache-coverage.outputs.cache-hit != 'true'
        run: docker cp $(docker ps -alq):/app/clover.xml .

      - name: 'Upload coverage artifact'
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./clover.xml

  coverage:
    name: 'Upload coverage'
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: coverage

      - uses: codecov/codecov-action@v3

      - uses: codacy/codacy-coverage-reporter-action@v1
        continue-on-error: true
        with:
          api-token: ${{ secrets.CODACY_API_TOKEN }}
